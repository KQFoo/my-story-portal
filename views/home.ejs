<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Story Portal</title>
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link href="/output.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .animated-header {
            background: linear-gradient(-45deg,
                    #1e1b4b,
                    #0f766e,
                    #312e81,
                    #0d9488);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
        }

        @keyframes gradient {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        .rainbow-text {
            background: linear-gradient(-45deg,
                    #2dd4bf,
                    #818cf8,
                    #f472b6,
                    #34d399);
            background-size: 200% auto;
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            animation: textGradient 5s linear infinite;
        }

        .card-hover {
            transition: all 0.3s ease;
        }

        .card-hover:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
    </style>
</head>

<body class="min-h-screen text-gray-100 bg-[#0F172A]">
    <header class="animated-header shadow-md fixed top-0 w-full z-10 border-b border-teal-400/20">
        <div class="w-full max-w-md sm:max-w-4xl mx-auto flex flex-col items-center px-3 py-4 gap-2">
            <h1 class="text-2xl font-black tracking-tight">
                <span class="rainbow-text">My Story Portal</span>
            </h1>
            <div class="flex items-center gap-2">
                <div class="text-teal-200 bg-teal-900/30 px-3 py-1.5 rounded-full text-xs 
                            border border-teal-400/20 shadow-inner flex items-center gap-1.5">
                    <div class="w-1.5 h-1.5 bg-teal-400 rounded-full animate-pulse"></div>
                    <span>Online: <span id="onlineCount" class="font-semibold">0</span></span>
                </div>
                <a href="https://buymeacoffee.com/foong" target="_blank" class="text-xs text-teal-200 hover:underline">
                    Buy Me a Coffee
                </a>
            </div>
        </div>
    </header>

    <div class="w-full max-w-md sm:max-w-2xl mx-auto mt-32 mb-20 px-3">
        <!-- Welcome message -->
        <div class="mb-4 text-teal-200 bg-teal-900/30 px-3 py-1.5 rounded-full text-sm 
                    border border-teal-400/20 shadow-inner flex items-center justify-center">
            Welcome, <%= user %>!
        </div>
        <!-- Filter Section -->
        <div class="flex gap-2 mb-4">
            <div class="relative flex-1">
                <input type="date" id="searchDate" onchange="filterByDate(this.value)"
                    class="w-full rounded-lg border border-teal-400/20 px-4 py-2 
                    bg-[#1E293B] text-teal-100 text-sm
                    focus:ring-2 focus:ring-teal-400/40 focus:border-teal-400/40 
                    hover:border-teal-400/40
                    [&::-webkit-calendar-picker-indicator]:invert
                    [&::-webkit-calendar-picker-indicator]:opacity-50 [&::-webkit-calendar-picker-indicator]:hover:opacity-100">
            </div>
            <button id="resetSearchBtn" class="px-3 py-1.5 rounded-lg bg-teal-600/20 text-teal-100 
                border border-teal-400/20 hover:bg-teal-600/30 text-sm">
                Reset
            </button>
        </div>

        <!-- Posts Section -->
        <div class="space-y-2">
            <% if (posts && posts.length> 0) { %>
                <% posts.forEach(post=> { %>
                    <div class="bg-[#1E293B] p-3 border border-teal-400/20 shadow-md"
                        data-post-id="<%= post.post_id %>">
                        <h3 class="text-lg font-black rainbow-text mb-2">
                            <%= post.title %>
                        </h3>
                        <p class="text-sm text-gray-300 leading-relaxed mb-2.5">
                            <%= post.post_content %>
                        </p>

                        <% if (post.embed_url) { %>
                            <div class="mb-3 rounded-lg overflow-hidden shadow-xl">
                                <div class="video-wrapper relative w-full pt-[56.25%] rounded-lg overflow-hidden">
                                    <iframe class="absolute top-0 left-0 w-full h-full" src="<%= post.embed_url %>"
                                        frameborder="0"
                                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                        allowfullscreen>
                                    </iframe>
                                </div>
                            </div>
                            <% } %>

                                <!-- Post Metadata -->
                                <div class="flex flex-col gap-2">
                                    <div class="flex items-center gap-2">
                                        <span class="text-xs text-teal-200 bg-[#0F172A] px-2.5 py-1 rounded-full 
                                               border border-teal-400/20">
                                            @<%= user || 'anonymous' %>
                                        </span>
                                        <span
                                            class="text-xs text-teal-200 bg-[#0F172A] px-2.5 py-1 rounded-full border border-teal-400/20 view-count">
                                            <%= post.views %> views
                                        </span>
                                    </div>
                                    <span class="text-xs text-teal-200 bg-[#0F172A] px-2.5 py-1 rounded-full
                                           border border-teal-400/20 w-fit">
                                        <%= post.created_at ? new Date(post.created_at).toLocaleDateString()
                                            : 'Date not available' %>
                                    </span>
                                </div>
                    </div>
                    <% }); %>
                        <% } else { %>
                            <div class="text-center bg-indigo-950/70 p-8 border border-teal-400/20 shadow-lg">
                                <div class="text-4xl mb-3">✨</div>
                                <p class="text-lg font-semibold mb-2 text-teal-100">No stories found</p>
                                <!-- <p class="text-sm text-teal-300">Be the first to share your story!</p> -->
                            </div>
                            <% } %>
        </div>
    </div>

    <!-- Form Section -->
    <div id="formSection" class="fixed bottom-0 left-0 right-0 bg-[#1E293B] 
                            border-t border-teal-400/20 shadow-md">
        <button id="toggleForm" class="absolute -top-8 left-1/2 transform -translate-x-1/2 
                   bg-[#1E293B] text-teal-200 px-4 py-1.5 rounded-t-lg 
                   border border-teal-400/20">
            <span id="toggleIcon" class="text-base">▲</span>
        </button>

        <div id="formContent" class="p-4 hidden">
            <% if (messages.error) { %>
                <div class="mb-4 p-3 rounded-lg bg-red-500/20 border border-red-400/30 text-red-200">
                    <%= messages.error %>
                </div>
                <% } %>
                    <% if (messages.success) { %>
                        <div class="mb-4 p-3 rounded-lg bg-green-500/20 border border-green-400/30 text-green-200">
                            <%= messages.success %>
                        </div>
                        <% } %>
                            <form id="storyForm" class="w-full max-w-md mx-auto flex flex-col gap-3">
                                <input type="hidden" name="userid" value="<%= user.user_id %>">
                                <input type="hidden" name="username" value="<%= user.user_name %>">

                                <input type="text" name="title" placeholder="Title of your story" required class="w-full rounded-xl border-2 border-teal-400/20 px-4 py-2.5 
                                    bg-[#0F172A] text-teal-100 placeholder-teal-400/50 
                                    focus:ring-2 focus:ring-teal-400/40 focus:border-teal-400/40 
                                    focus:outline-none transition-all duration-300">

                                <input type="url" name="music_url" placeholder="Paste YouTube URL (music preferred)"
                                    class="w-full rounded-xl border-2 border-teal-400/20 px-4 py-2.5 
                                              bg-[#0F172A] text-teal-100 placeholder-teal-400/50 
                                              focus:ring-2 focus:ring-teal-400/40 focus:border-teal-400/40 
                                              focus:outline-none transition-all duration-300">

                                <textarea name="post_content" placeholder="Write your story here..." required
                                    class="w-full rounded-xl border-2 border-teal-400/20 px-4 py-2.5 
                                                 h-24 resize-none bg-[#0F172A] text-teal-100 
                                                 placeholder-teal-400/50 focus:ring-2 focus:ring-teal-400/40 
                                                 focus:border-teal-400/40 focus:outline-none transition-all duration-300"></textarea>

                                <button type="submit" class="w-full bg-teal-600/20 text-teal-100 px-4 py-2.5 
                                                       rounded-xl border border-teal-400/20 
                                                       hover:bg-teal-600/30 transition-all duration-300 
                                                       font-medium">
                                    Share Your Story
                                </button>
                            </form>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Toggle form button
            const toggleBtn = document.getElementById('toggleForm');
            const formContent = document.getElementById('formContent');
            const toggleIcon = document.getElementById('toggleIcon');
            const storyForm = document.getElementById('storyForm');

            if (toggleBtn && formContent && toggleIcon) {
                toggleBtn.addEventListener('click', () => {
                    formContent.classList.toggle('hidden');
                    toggleIcon.textContent = formContent.classList.contains('hidden') ? '▲' : '▼';
                });
            }

            if (storyForm) {
                storyForm.addEventListener('submit', submitStory);
            }

            // Reset filter button
            const resetSearchBtn = document.getElementById('resetSearchBtn');
            if (resetSearchBtn) {
                resetSearchBtn.addEventListener('click', resetSearch);
            }
        });

        // Socket.io connection (online user)
        try {
            const socket = io({
                transports: ['websocket', 'polling'],
                reconnection: true
            });

            socket.on('connect', () => {
                console.log('Socket connected successfully');
            });

            socket.on('updateOnlineUsers', (count) => {
                document.getElementById('onlineCount').textContent = count;
            });

            socket.on('connect_error', (error) => {
                console.warn('Socket connection error:', error);
            });
        } catch (error) {
            console.warn('Socket connection failed:', error);
        }

        // Check if local storage is empty
        const username = localStorage.getItem('username') || 'anonymous';
        const user_created = localStorage.getItem('user_created');

        if (username === null || user_created === null) {
            console.error("Error: username or timestamp is null");
            window.location.href = "/";
        }

        // Filter posts by date
        function filterByDate(date) {
            if (!date) return;
            const formattedDate = new Date(date).toISOString().split('T')[0];
            window.location.href = `/post/filter?date=${formattedDate}&username=${username}&timestamp=${user_created}`;
        }

        // Reset the filter
        function resetSearch() {
            const searchDate = document.getElementById('searchDate');
            if (searchDate) {
                searchDate.value = '';
            }
            window.location.href = `/home?username=${username}&timestamp=${user_created}`;
        }

        // Notification function
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${type === 'success'
                ? 'bg-green-500/20 border border-green-400/30 text-green-200'
                : 'bg-red-500/20 border border-red-400/30 text-red-200'
                }`;
            notification.textContent = message;

            document.body.appendChild(notification);

            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        async function submitStory(event) {
            event.preventDefault();
            const form = event.target;
            const submitButton = form.querySelector('button[type="submit"]');

            // Loading state
            const originalButtonText = submitButton.innerHTML;
            submitButton.disabled = true;
            submitButton.innerHTML = `
                <svg class="animate-spin h-5 w-5 mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
            `;

            const formData = new FormData(form);

            try {
                const response = await fetch('/post/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify(Object.fromEntries(formData))
                });

                // Log the response details for debugging
                // console.log('Response status:', response.status);
                // console.log('Response headers:', response.headers);

                let data;
                const contentType = response.headers.get('content-type');

                if (contentType && contentType.includes('application/json')) {
                    data = await response.json();
                } else {
                    const text = await response.text();
                    // console.log('Response text:', text);
                    try {
                        data = JSON.parse(text);
                    } catch (e) {
                        throw new Error('Server returned invalid response format');
                    }
                }

                if (data.success) {
                    // Create new post HTML
                    const postHTML = `
                        <div class="bg-[#1E293B] p-3 border border-teal-400/20 shadow-md" data-post-id="${data.post.post_id}">
                            <h3 class="text-lg font-black rainbow-text mb-2">
                                ${data.post.title}
                            </h3>
                            <p class="text-sm text-gray-300 leading-relaxed mb-2.5">
                                ${data.post.post_content}
                            </p>
                            ${data.post.embed_url ? `
                                <div class="mb-3 rounded-lg overflow-hidden shadow-xl">
                                    <div class="video-wrapper relative w-full pt-[56.25%] rounded-lg overflow-hidden">
                                        <iframe class="absolute top-0 left-0 w-full h-full pointer-events-none" 
                                                src="${data.post.embed_url}"
                                                frameborder="0"
                                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                                allowfullscreen>
                                        </iframe>
                                    </div>
                                </div>
                            ` : ''}
                            <div class="flex flex-col gap-2">
                                <div class="flex items-center gap-2">
                                    <span class="text-xs text-teal-200 bg-[#0F172A] px-2.5 py-1 rounded-full shadow-inner border border-teal-400/20">
                                        @${data.post.user_id || 'anonymous'}th user
                                    </span>
                                    <span class="text-xs text-teal-200 bg-[#0F172A] px-2.5 py-1 rounded-full shadow-inner border border-teal-400/20 view-count">
                                        ${data.post.views} views
                                    </span>
                                </div>
                                <span class="text-xs text-teal-200 bg-[#0F172A] px-2.5 py-1 rounded-full shadow-inner border border-teal-400/20 w-fit">
                                    ${new Date().toLocaleDateString()}
                                </span>
                            </div>
                        </div>
                    `;

                    // Add new post to the top of the posts section
                    const postsContainer = document.querySelector('.space-y-2');

                    // Check if there's a "no stories" message and remove it
                    const noStoriesMessage = postsContainer.querySelector(':scope > div:only-child');
                    if (noStoriesMessage && noStoriesMessage.textContent.includes('No stories found')) {
                        noStoriesMessage.remove();
                    }

                    postsContainer.insertAdjacentHTML('afterbegin', postHTML);

                    // Clear form
                    form.reset();

                    // Show success notification
                    showNotification(data.message, 'success');

                    // Close the form section
                    document.getElementById('formContent').classList.add('hidden');
                    document.getElementById('toggleIcon').textContent = '▲';
                } else {
                    showNotification(data.message || 'Failed to create post', 'error');
                }
            } catch (error) {
                console.error('Error details:', error);
                showNotification('Failed to create post. Please try again.', 'error');
            } finally {
                // Reset button state
                submitButton.disabled = false;
                submitButton.innerHTML = originalButtonText;
            }
        }

        // Observe post
        const observerOptions = {
            root: null,
            rootMargin: '0px',
            threshold: 0.5 // post must be 50% visible
        };

        const viewedPosts = new Set(); // Track which posts have been viewed

        // Function to increment post views
        async function incrementPostViews(postId) {
            // console.log('Attempting to increment views for post:', postId); // Debug log

            try {
                const response = await fetch(`/post/${postId}/increment-views`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                // console.log('Increment response:', response.status); // Debug log

                if (response.ok) {
                    const viewCountElement = document.querySelector(`[data-post-id="${postId}"] .view-count`);
                    if (viewCountElement) {
                        const currentViews = parseInt(viewCountElement.textContent);
                        viewCountElement.textContent = `${currentViews + 1} views`;
                        // console.log('Updated view count in UI for post:', postId); // Debug log
                    }
                }
            } catch (error) {
                console.error('Error incrementing views:', error);
            }
        }

        const postObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const postId = entry.target.dataset.postId;
                    // console.log('Post visible:', postId); // Debug log
                    // console.log('Already viewed:', viewedPosts.has(postId)); // Debug log

                    if (!viewedPosts.has(postId)) {
                        incrementPostViews(postId);
                        viewedPosts.add(postId);
                    }
                }
            });
        }, observerOptions);

        // Make sure posts are being observed
        document.addEventListener('DOMContentLoaded', () => {
            const posts = document.querySelectorAll('[data-post-id]');
            // console.log('Found posts:', posts.length); // Debug log

            posts.forEach(post => {
                // console.log('Observing post:', post.dataset.postId); // Debug log
                postObserver.observe(post);
            });
        });
    </script>
</body>

</html>